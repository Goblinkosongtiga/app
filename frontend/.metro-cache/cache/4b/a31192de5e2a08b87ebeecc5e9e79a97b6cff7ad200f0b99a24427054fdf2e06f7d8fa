{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":117},"end":{"line":4,"column":34,"index":135}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parse = void 0;\n  const utils_1 = require(_dependencyMap[0], \"./utils\");\n  // **`parse()` - Parse a UUID into it's component bytes**\n  const parse = (s, buf, offset) => {\n    let i = buf && offset || 0;\n    let ii = 0;\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, oct => {\n      // Don't overflow!\n      if (ii < 16 && buf) {\n        buf[i + ii++] = utils_1.hexToByte[oct];\n      }\n      return '';\n    });\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n    return buf;\n  };\n  exports.parse = parse;\n});","lineCount":28,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"parse"],[7,15,3,13],[7,18,3,16],[7,23,3,21],[7,24,3,22],[8,2,4,0],[8,8,4,6,"utils_1"],[8,15,4,13],[8,18,4,16,"require"],[8,25,4,23],[8,26,4,23,"_dependencyMap"],[8,40,4,23],[8,54,4,33],[8,55,4,34],[9,2,5,0],[10,2,6,0],[10,8,6,6,"parse"],[10,13,6,11],[10,16,6,14,"parse"],[10,17,6,15,"s"],[10,18,6,16],[10,20,6,18,"buf"],[10,23,6,21],[10,25,6,23,"offset"],[10,31,6,29],[10,36,6,34],[11,4,7,4],[11,8,7,8,"i"],[11,9,7,9],[11,12,7,13,"buf"],[11,15,7,16],[11,19,7,20,"offset"],[11,25,7,26],[11,29,7,31],[11,30,7,32],[12,4,8,4],[12,8,8,8,"ii"],[12,10,8,10],[12,13,8,13],[12,14,8,14],[13,4,9,4,"buf"],[13,7,9,7],[13,10,9,10,"buf"],[13,13,9,13],[13,17,9,17],[13,19,9,19],[14,4,10,4,"s"],[14,5,10,5],[14,6,10,6,"toLowerCase"],[14,17,10,17],[14,18,10,18],[14,19,10,19],[14,20,10,20,"replace"],[14,27,10,27],[14,28,10,28],[14,42,10,42],[14,44,10,45,"oct"],[14,47,10,48],[14,51,10,53],[15,6,11,8],[16,6,12,8],[16,10,12,12,"ii"],[16,12,12,14],[16,15,12,17],[16,17,12,19],[16,21,12,23,"buf"],[16,24,12,26],[16,26,12,28],[17,8,13,12,"buf"],[17,11,13,15],[17,12,13,16,"i"],[17,13,13,17],[17,16,13,20,"ii"],[17,18,13,22],[17,20,13,24],[17,21,13,25],[17,24,13,28,"utils_1"],[17,31,13,35],[17,32,13,36,"hexToByte"],[17,41,13,45],[17,42,13,46,"oct"],[17,45,13,49],[17,46,13,50],[18,6,14,8],[19,6,15,8],[19,13,15,15],[19,15,15,17],[20,4,16,4],[20,5,16,5],[20,6,16,6],[21,4,17,4],[22,4,18,4],[22,11,18,11,"ii"],[22,13,18,13],[22,16,18,16],[22,18,18,18],[22,20,18,20],[23,6,19,8,"buf"],[23,9,19,11],[23,10,19,12,"i"],[23,11,19,13],[23,14,19,16,"ii"],[23,16,19,18],[23,18,19,20],[23,19,19,21],[23,22,19,24],[23,23,19,25],[24,4,20,4],[25,4,21,4],[25,11,21,11,"buf"],[25,14,21,14],[26,2,22,0],[26,3,22,1],[27,2,23,0,"exports"],[27,9,23,7],[27,10,23,8,"parse"],[27,15,23,13],[27,18,23,16,"parse"],[27,23,23,21],[28,0,23,22],[28,3]],"functionMap":{"names":["<global>","parse","s.toLowerCase.replace$argument_1"],"mappings":"AAA;cCK;4CCI;KDM;CDM"}},"type":"js/module"}]}