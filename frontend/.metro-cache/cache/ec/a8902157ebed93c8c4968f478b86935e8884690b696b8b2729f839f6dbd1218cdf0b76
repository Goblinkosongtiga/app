{"dependencies":[{"name":"./validate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":19,"index":124},"end":{"line":4,"column":40,"index":145}}],"key":"k8Lr+uWeMKzql3DORPbdVwO9vBs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.stringify = void 0;\n  const validate_1 = require(_dependencyMap[0], \"./validate\");\n  /**\n   * Convert array of 16 byte values to UUID string format of the form:\n   * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n   */\n  const byteToHex = [];\n  for (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).substr(1));\n  }\n  const stringify = (arr, offset = 0) => {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n    // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n    if (!(0, validate_1.validate)(uuid)) {\n      throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n  };\n  exports.stringify = stringify;\n});","lineCount":32,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"stringify"],[7,19,3,17],[7,22,3,20],[7,27,3,25],[7,28,3,26],[8,2,4,0],[8,8,4,6,"validate_1"],[8,18,4,16],[8,21,4,19,"require"],[8,28,4,26],[8,29,4,26,"_dependencyMap"],[8,43,4,26],[8,60,4,39],[8,61,4,40],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,2,9,0],[13,8,9,6,"byteToHex"],[13,17,9,15],[13,20,9,18],[13,22,9,20],[14,2,10,0],[14,7,10,5],[14,11,10,9,"i"],[14,12,10,10],[14,15,10,13],[14,16,10,14],[14,18,10,16,"i"],[14,19,10,17],[14,22,10,20],[14,25,10,23],[14,27,10,25],[14,29,10,27,"i"],[14,30,10,28],[14,32,10,30],[15,4,11,4,"byteToHex"],[15,13,11,13],[15,14,11,14,"push"],[15,18,11,18],[15,19,11,19],[15,20,11,20,"i"],[15,21,11,21],[15,24,11,24],[15,29,11,29],[15,31,11,31,"toString"],[15,39,11,39],[15,40,11,40],[15,42,11,42],[15,43,11,43],[15,44,11,44,"substr"],[15,50,11,50],[15,51,11,51],[15,52,11,52],[15,53,11,53],[15,54,11,54],[16,2,12,0],[17,2,13,0],[17,8,13,6,"stringify"],[17,17,13,15],[17,20,13,18,"stringify"],[17,21,13,19,"arr"],[17,24,13,22],[17,26,13,24,"offset"],[17,32,13,30],[17,35,13,33],[17,36,13,34],[17,41,13,39],[18,4,14,4],[19,4,15,4],[20,4,16,4],[20,10,16,10,"uuid"],[20,14,16,14],[20,17,16,17],[20,18,16,18,"byteToHex"],[20,27,16,27],[20,28,16,28,"arr"],[20,31,16,31],[20,32,16,32,"offset"],[20,38,16,38],[20,41,16,41],[20,42,16,42],[20,43,16,43],[20,44,16,44],[20,47,17,8,"byteToHex"],[20,56,17,17],[20,57,17,18,"arr"],[20,60,17,21],[20,61,17,22,"offset"],[20,67,17,28],[20,70,17,31],[20,71,17,32],[20,72,17,33],[20,73,17,34],[20,76,18,8,"byteToHex"],[20,85,18,17],[20,86,18,18,"arr"],[20,89,18,21],[20,90,18,22,"offset"],[20,96,18,28],[20,99,18,31],[20,100,18,32],[20,101,18,33],[20,102,18,34],[20,105,19,8,"byteToHex"],[20,114,19,17],[20,115,19,18,"arr"],[20,118,19,21],[20,119,19,22,"offset"],[20,125,19,28],[20,128,19,31],[20,129,19,32],[20,130,19,33],[20,131,19,34],[20,134,20,8],[20,137,20,11],[20,140,21,8,"byteToHex"],[20,149,21,17],[20,150,21,18,"arr"],[20,153,21,21],[20,154,21,22,"offset"],[20,160,21,28],[20,163,21,31],[20,164,21,32],[20,165,21,33],[20,166,21,34],[20,169,22,8,"byteToHex"],[20,178,22,17],[20,179,22,18,"arr"],[20,182,22,21],[20,183,22,22,"offset"],[20,189,22,28],[20,192,22,31],[20,193,22,32],[20,194,22,33],[20,195,22,34],[20,198,23,8],[20,201,23,11],[20,204,24,8,"byteToHex"],[20,213,24,17],[20,214,24,18,"arr"],[20,217,24,21],[20,218,24,22,"offset"],[20,224,24,28],[20,227,24,31],[20,228,24,32],[20,229,24,33],[20,230,24,34],[20,233,25,8,"byteToHex"],[20,242,25,17],[20,243,25,18,"arr"],[20,246,25,21],[20,247,25,22,"offset"],[20,253,25,28],[20,256,25,31],[20,257,25,32],[20,258,25,33],[20,259,25,34],[20,262,26,8],[20,265,26,11],[20,268,27,8,"byteToHex"],[20,277,27,17],[20,278,27,18,"arr"],[20,281,27,21],[20,282,27,22,"offset"],[20,288,27,28],[20,291,27,31],[20,292,27,32],[20,293,27,33],[20,294,27,34],[20,297,28,8,"byteToHex"],[20,306,28,17],[20,307,28,18,"arr"],[20,310,28,21],[20,311,28,22,"offset"],[20,317,28,28],[20,320,28,31],[20,321,28,32],[20,322,28,33],[20,323,28,34],[20,326,29,8],[20,329,29,11],[20,332,30,8,"byteToHex"],[20,341,30,17],[20,342,30,18,"arr"],[20,345,30,21],[20,346,30,22,"offset"],[20,352,30,28],[20,355,30,31],[20,357,30,33],[20,358,30,34],[20,359,30,35],[20,362,31,8,"byteToHex"],[20,371,31,17],[20,372,31,18,"arr"],[20,375,31,21],[20,376,31,22,"offset"],[20,382,31,28],[20,385,31,31],[20,387,31,33],[20,388,31,34],[20,389,31,35],[20,392,32,8,"byteToHex"],[20,401,32,17],[20,402,32,18,"arr"],[20,405,32,21],[20,406,32,22,"offset"],[20,412,32,28],[20,415,32,31],[20,417,32,33],[20,418,32,34],[20,419,32,35],[20,422,33,8,"byteToHex"],[20,431,33,17],[20,432,33,18,"arr"],[20,435,33,21],[20,436,33,22,"offset"],[20,442,33,28],[20,445,33,31],[20,447,33,33],[20,448,33,34],[20,449,33,35],[20,452,34,8,"byteToHex"],[20,461,34,17],[20,462,34,18,"arr"],[20,465,34,21],[20,466,34,22,"offset"],[20,472,34,28],[20,475,34,31],[20,477,34,33],[20,478,34,34],[20,479,34,35],[20,482,35,8,"byteToHex"],[20,491,35,17],[20,492,35,18,"arr"],[20,495,35,21],[20,496,35,22,"offset"],[20,502,35,28],[20,505,35,31],[20,507,35,33],[20,508,35,34],[20,509,35,35],[20,511,35,37,"toLowerCase"],[20,522,35,48],[20,523,35,49],[20,524,35,50],[21,4,36,4],[22,4,37,4],[23,4,38,4],[24,4,39,4],[25,4,40,4],[26,4,41,4],[26,8,41,8],[26,9,41,9],[26,10,41,10],[26,11,41,11],[26,13,41,13,"validate_1"],[26,23,41,23],[26,24,41,24,"validate"],[26,32,41,32],[26,34,41,34,"uuid"],[26,38,41,38],[26,39,41,39],[26,41,41,41],[27,6,42,8],[27,12,42,14,"TypeError"],[27,21,42,23],[27,22,42,24],[27,51,42,53],[27,52,42,54],[28,4,43,4],[29,4,44,4],[29,11,44,11,"uuid"],[29,15,44,15],[30,2,45,0],[30,3,45,1],[31,2,46,0,"exports"],[31,9,46,7],[31,10,46,8,"stringify"],[31,19,46,17],[31,22,46,20,"stringify"],[31,31,46,29],[32,0,46,30],[32,3]],"functionMap":{"names":["<global>","stringify"],"mappings":"AAA;kBCY;CDgC"}},"type":"js/module"}]}